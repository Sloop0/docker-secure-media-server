---
version: '3.7'

services:

  traefik:
    image: traefik:chevrotin
    container_name: traefik
    hostname: traefik
    ports:
      - "2052:80"
      - "2053:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${CONFIG}/traefik/traefik.toml:/etc/traefik/traefik.toml
      - ${CONFIG}/traefik/certs/:/certs
      - ${CONFIG}/traefik/dynamicconf/:/dynamicconf
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN}`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.middlewares=security@file"
      - "com.centurylinklabs.watchtower.enable=true"

  ddclient:
    image: linuxserver/ddclient
    container_name: ddclient
    volumes:
      - ${CONFIG}/ddclient:/config
    restart: unless-stopped
    
  sabnzbd:
    image: linuxserver/sabnzbd:latest
    container_name: sabnzbd
    volumes:
      - ${CONFIG}/sabnzbd:/config
      - ${DOWNLOAD}:/downloads
      - ${DOWNLOAD}/watch:/watch
    depends_on:
      - vpn
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    network_mode: service:vpn
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sabnzbd.rule=Host(`sabnzbd.${DOMAIN}`)"
      - "traefik.http.routers.sabnzbd.entrypoints=websecure"
      - "traefik.http.routers.sabnzbd.tls=true"
      - "traefik.http.routers.sabnzbd.middlewares=security@file"
      - "traefik.http.services.sabnzbd.loadbalancer.server.port=8080"
      - "com.centurylinklabs.watchtower.enable=true"
    restart: unless-stopped
    
  sonarr:
    image: linuxserver/sonarr:preview
    container_name: sonarr
    hostname: sonarr
    expose:
      - "8989"
    volumes:
      - ${CONFIG}/sonarr/config.xml:/config/config.xml
      - ${CONFIG}/sonarr/sonarr.db:/config/sonarr.db
      - ${CONFIG}/sonarr/Backups:/config/Backups
      - ${CONFIG}/sonarr/MediaCover:/config/MediaCover
      - ${CONFIG}/sonarr/logs:/config/logs
      - ${DOWNLOAD}:/downloads
      - ${DATA}/tv:/tv
      - ${DATA}/anime:/anime
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
      - UMASK_SET=022
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.${DOMAIN}`)"
      - "traefik.http.routers.sonarr.entrypoints=websecure"
      - "traefik.http.routers.sonarr.tls=true"
      - "traefik.http.routers.sonarr.middlewares=security@file"
      - "traefik.http.routers.sonarrcal.rule=Host(`sonarr.${DOMAIN}`) && PathPrefix(`/feed/calendar/`)"
      - "traefik.http.routers.sonarrcal.tls=true"
      - "traefik.http.routers.sonarrcal.entrypoints=websecure"
      - "traefik.http.routers.sonarrcal.middlewares=noauth@file"
      - "com.centurylinklabs.watchtower.enable=true"
    restart: unless-stopped

  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    hostname: radarr
    expose:
      - "7878"
    volumes:
      - ${CONFIG}/radarr/config.xml:/config/config.xml
      - ${CONFIG}/radarr/nzbdrone.db:/config/nzbdrone.db
      - ${CONFIG}/radarr/Backups:/config/Backups
      - ${CONFIG}/radarr/MediaCover:/config/MediaCover
      - ${CONFIG}/radarr/logs:/config/logs
      - ${DOWNLOAD}:/downloads
      - ${DATA}/movies:/movies
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
      - UMASK_SET=022
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`radarr.${DOMAIN}`)"
      - "traefik.http.routers.radarr.entrypoints=websecure"
      - "traefik.http.routers.radarr.tls=true"
      - "traefik.http.routers.radarr.middlewares=security@file"
      - "com.centurylinklabs.watchtower.enable=true"
    restart: unless-stopped
    
  nzbhydra:
    image: linuxserver/hydra2:latest
    container_name: nzbhydra
    network_mode: service:vpn
    volumes:
      - ${CONFIG}/nzbhydra2:/config
      - ${DOWNLOAD}/complete:/downloads
    depends_on:
      - vpn
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nzbhydra.rule=Host(`nzbhydra.${DOMAIN}`)"
      - "traefik.http.routers.nzbhydra.entrypoints=websecure"
      - "traefik.http.routers.nzbhydra.tls=true"
      - "traefik.http.routers.nzbhydra.middlewares=security@file"
      - "traefik.http.services.nzbhydra.loadbalancer.server.port=5076"
      - "com.centurylinklabs.watchtower.enable=true"
    restart: unless-stopped

  plex:
    image: linuxserver/plex
    container_name: plex
    hostname: plex
    ports:
      - "32400:32400"
      - "32400:32400/udp"
      - "32469:32469"
      - "32469:32469/udp"
      - "1900:1900/udp"
    volumes:
      - ${CONFIG}/plex:/config
      - ${DATA}/tv:/media/tv
      - ${DATA}/movies:/media/movies
      - ${DATA}/music:/media/music
      - ${DATA}/anime:/media/anime
    environment:
      - PGID=0
      - PUID=0
      - TZ=${TZ}
      - VERSION=latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.plex.loadbalancer.server.port=32400"
      - "traefik.http.routers.plex.rule=Host(`plex.${DOMAIN}`)"
      - "traefik.http.routers.plex.entrypoints=websecure"
      - "traefik.http.routers.plex.tls=true"
      - "traefik.http.routers.plex.middlewares=security@file"
    restart: unless-stopped

  heimdall:
    image: linuxserver/heimdall:latest
    container_name: heimdall
    hostname: heimdall
    volumes:
      - ${CONFIG}/heimdall:/config
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.heimdall.entrypoints=websecure"
      - "traefik.http.routers.heimdall.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.heimdall.middlewares=security@file"
      - "traefik.http.routers.heimdall.tls=true"
      - "com.centurylinklabs.watchtower.enable=true"
    restart: unless-stopped

  oauth:
    image: thomseddon/traefik-forward-auth
    container_name: oauth
    hostname: oauth
    restart: unless-stopped
    environment:
      PROVIDERS_GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      PROVIDERS_GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      SECRET: ${OAUTH_SECRET}
      COOKIE_DOMAIN: ${DOMAIN}
      INSECURE_COOKIE: "false"
      WHITELIST: "sloop120@gmail.com,jenna.kessell@gmail.com"
      LOG_LEVEL: info
      LIFETIME: 2592000 # 30 days
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      
  vpn:
    image: sloop0/docker-transmission-openvpn-traefik:latest
    container_name: vpn
    hostname: vpn
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    expose:
      - "9091"
      - "8080"
      - "5076"
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=0
    dns:
      - 8.8.8.8
      - 8.8.4.4
    volumes:
      - ${DOWNLOAD}:/data
      - ${CONFIG}/vpn/providers/ghostpath:/etc/openvpn/ghostpath
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
      - OPENVPN_PROVIDER=${VPN_PROVIDER}
      - OPENVPN_USERNAME=${VPN_USER}
      - OPENVPN_PASSWORD=${VPN_PASSWORD}
      - OPENVPN_CONFIG=${VPN_CONFIG}
      - OPENVPN_OPTS=--inactive 3600 --resolv-retry 10 
      - LOCAL_NETWORK=192.168.86.0/24, 172.22.0/24
      - TRANSMISSION_PEER_PORT=49550
      - TRANSMISSION_PEER_LIMIT_PER_TORRENT=100
      - TRANSMISSION_SPEED_LIMIT_DOWN=8000
      - TRANSMISSION_SPEED_LIMIT_DOWN_ENABLED=true
      - TRANSMISSION_SPEED_LIMIT_UP=2000
      - TRANSMISSION_SPEED_LIMIT_UP_ENABLED=true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.transmission.entrypoints=websecure"
      - "traefik.http.routers.transmission.rule=Host(`transmission.${DOMAIN}`)"
      - "traefik.http.routers.transmission.middlewares=security@file"
      - "traefik.http.routers.transmission.tls=true"
      - "traefik.http.services.transmission.loadbalancer.server.port=9091"
      - "com.centurylinklabs.watchtower.enable=true"
      
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=21600
      - WATCHTOWER_LABEL_ENABLE=true
    restart: unless-stopped
      
networks:
  default:
    ipam:
      config:
        - subnet: "172.22.0.0/24"