[tls]
  [[tls.certificates]]
    certFile = "/certs/Cloudflare.cert"
    keyFile = "/certs/Cloudflare.key"
  [tls.options]
    [tls.options.default]
	  sniStrict = false
        [tls.options.default.clientAuth]
	      caFiles = ["/certs/Cloudflare_ca.pem"]
		  clientAuthType = "RequireAndVerifyClientCert"
  [tls.stores]
    [tls.stores.default]
	  [tls.stores.default.defaultCertificate]
	    certFile = "/certs/Cloudflare.cert"
        keyFile = "/certs/Cloudflare.key"

[http]
  [http.middlewares]
    [http.middlewares.oauth.forwardAuth]
	  address = "http://oauth:4181"
      trustForwardHeader = true
      authResponseHeaders = ["X-Forwarded-User"]
	  [http.middlewares.oauth.forwardAuth.tls]
	    ca = "/certs/Cloudflare_ecc.pem"
	    cert = "/certs/Cloudflare.cert"
	    key = "/certs/Cloudflare.key"
	[http.middlewares.redirect.redirectscheme]
	  scheme = "websecure"
	[http.middlewares.whitelist.ipwhitelist]
	  sourceRange = ["172.22.0.0/24","192.168.86.0/24", "173.245.48.0/20", "103.21.244.0/22", "103.22.200.0/22", "103.31.4.0/22", "141.101.64.0/18", "108.162.192.0/18", "190.93.240.0/20", "188.114.96.0/20", "197.234.240.0/22", "198.41.128.0/17", "162.158.0.0/15", "104.16.0.0/12", "172.64.0.0/13", "131.0.72.0/22"]
	[http.middlewares.headers.headers]
	  frameDeny = true
      contentTypeNosniff = true
      browserXssFilter = true
      forceSTSHeader = true
      sslRedirect = true
      stsPreload = true
      stsSeconds = 315360000
      stsIncludeSubdomains = true
	  [http.middlewares.headers.headers.customRequestHeaders]
	    X-Forwarded-Proto = "https"
    [http.middlewares.security.chain]
	  middlewares = ["whitelist", "oauth","headers"]
	[http.middlewares.noauth.chain]
	  middlewares = ["whitelist", "headers"]
	[http.middlewares.wwwredirect.redirectregex]
	  regex = "^https?://(?:www\\.)?(.+)"
	  replacement = "https://${1}"
	  permanent = true
	[http.middlewares.authredirect.redirectregex]
	  regex = "https://auth.{{env "DOMAIN"}}(.*)"
	  replacement = "https://{{env "DOMAIN"}}"
	  permanent = true
  [http.routers]
	[http.routers.pihole]
	  entryPoints = ["websecure"]
	  rule = "Host(`pihole.{{env "DOMAIN"}}`)"
	  middlewares = ["security"]
	  service = "pihole"
	  [http.routers.pihole.tls]
	[http.routers.wwwredirect]
	  entryPoints = ["websecure"]
	  rule = "Host(`www.{{env "DOMAIN"}}`)"
	  middlewares = ["security", "wwwredirect"]
	  service = "noop@internal"
	  [http.routers.wwwredirect.tls]
	[http.routers.authredirect]
	  entryPoints = ["websecure"]
	  rule = "Host(`auth.{{env "DOMAIN"}}`) && Path(`/`)"
	  middlewares = ["security", "authredirect"]
	  service = "noop@internal"
	  [http.routers.authredirect.tls]
  [http.services]
	[http.services.pihole.loadBalancer]
	  passHostHeader = true
	  [[http.services.pihole.loadBalancer.servers]]
	    url = "{{env "PIHOLE_IP"}}"